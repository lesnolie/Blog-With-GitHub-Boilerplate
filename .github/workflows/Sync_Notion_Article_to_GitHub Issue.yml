name: Notion Scan

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  notion-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install notion-client

      - name: Scan Notion database
        id: notion-scan
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          python scan.py

      - name: Create issues
        if: ${{ steps.notion-scan.outputs.issues }}
        env:
          GITHUB_TOKEN: ${{ secrets.G_T }}
        run: |
          const { context, getOctokit } = require('@actions/github');
          const octokit = getOctokit(process.env.GITHUB_TOKEN);
          const issues = JSON.parse(steps.notion-scan.outputs.issues);
          console.log(`Creating ${issues.length} issues`);
          issues.forEach(async issue => {
            const { data } = await octokit.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issue.title,
              body: issue.body
            });
            console.log(`Created issue ${data.html_url}`);
          });
